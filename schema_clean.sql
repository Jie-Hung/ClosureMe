-- ==========================================
-- ClosureMe 專案初始化 Schema (for Render)
-- 已清理: 移除 CREATE DATABASE / \connect
-- OWNER 已改為 closureme_dbs_user
-- ==========================================

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET transaction_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

-- SCHEMA 擁有者
ALTER SCHEMA public OWNER TO closureme_dbs_user;

-- ==========================================
-- FUNCTION
-- ==========================================
CREATE FUNCTION public.enforce_same_batch() RETURNS trigger
    LANGUAGE plpgsql
AS $$
DECLARE
  batch_main uuid;
  batch_parts uuid;
BEGIN
  IF NEW.role_type IN ('head','body') THEN
    SELECT upload_batch INTO batch_main
    FROM char_images
    WHERE user_id = NEW.user_id
      AND role_type = 'main'
      AND split_part(file_name,'.',1) = split_part(NEW.file_name,'_',1)
    LIMIT 1;

    IF batch_main IS NOT NULL THEN
      NEW.upload_batch := batch_main;
    END IF;

  ELSIF NEW.role_type = 'main' THEN
    SELECT upload_batch INTO batch_parts
    FROM char_images
    WHERE user_id = NEW.user_id
      AND role_type IN ('head','body')
      AND split_part(file_name,'_',1) = split_part(NEW.file_name,'.',1)
    ORDER BY uploaded_at DESC
    LIMIT 1;

    IF batch_parts IS NOT NULL THEN
      NEW.upload_batch := batch_parts;
    END IF;
  END IF;

  RETURN NEW;
END; $$;

ALTER FUNCTION public.enforce_same_batch() OWNER TO closureme_dbs_user;

-- ==========================================
-- SEQUENCES
-- ==========================================
CREATE SEQUENCE public.char_appearance_id_seq START WITH 1 INCREMENT BY 1;
ALTER SEQUENCE public.char_appearance_id_seq OWNER TO closureme_dbs_user;

CREATE SEQUENCE public.char_images_id_seq START WITH 1 INCREMENT BY 1;
ALTER SEQUENCE public.char_images_id_seq OWNER TO closureme_dbs_user;

CREATE SEQUENCE public.char_memory_id_seq START WITH 1 INCREMENT BY 1;
ALTER SEQUENCE public.char_memory_id_seq OWNER TO closureme_dbs_user;

CREATE SEQUENCE public.char_model_id_seq START WITH 1 INCREMENT BY 1;
ALTER SEQUENCE public.char_model_id_seq OWNER TO closureme_dbs_user;

CREATE SEQUENCE public.users_id_seq START WITH 1 INCREMENT BY 1;
ALTER SEQUENCE public.users_id_seq OWNER TO closureme_dbs_user;

-- ==========================================
-- TABLES
-- ==========================================
CREATE TABLE public.char_images (
    id integer DEFAULT nextval('public.char_images_id_seq'::regclass) NOT NULL,
    user_id integer,
    file_name character varying(255) NOT NULL,
    file_path character varying(500) NOT NULL,
    uploaded_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    upload_batch text,
    role_type text DEFAULT 'main'::text,
    CONSTRAINT char_images_pkey PRIMARY KEY (id)
);
ALTER TABLE public.char_images OWNER TO closureme_dbs_user;

CREATE TABLE public.char_memory (
    id integer DEFAULT nextval('public.char_memory_id_seq'::regclass) NOT NULL,
    image_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    file_path character varying(500),
    CONSTRAINT char_memory_pkey PRIMARY KEY (id)
);
ALTER TABLE public.char_memory OWNER TO closureme_dbs_user;

CREATE TABLE public.char_model (
    id integer DEFAULT nextval('public.char_model_id_seq'::regclass) NOT NULL,
    image_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    file_path character varying(500) NOT NULL,
    CONSTRAINT char_model_pkey PRIMARY KEY (id)
);
ALTER TABLE public.char_model OWNER TO closureme_dbs_user;

CREATE TABLE public.char_profile (
    id integer DEFAULT nextval('public.char_appearance_id_seq'::regclass) NOT NULL,
    image_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    file_path character varying(500),
    CONSTRAINT char_profile_pkey PRIMARY KEY (id)
);
ALTER TABLE public.char_profile OWNER TO closureme_dbs_user;

CREATE TABLE public.char_voice (
    id integer GENERATED BY DEFAULT AS IDENTITY,
    image_id integer,
    created_at timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    file_path text,
    CONSTRAINT char_voice_pkey PRIMARY KEY (id)
);
ALTER TABLE public.char_voice OWNER TO closureme_dbs_user;

CREATE TABLE public.users (
    id integer DEFAULT nextval('public.users_id_seq'::regclass) NOT NULL,
    username character varying(255) NOT NULL,
    password text NOT NULL,
    email text,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_username_key UNIQUE (username),
    CONSTRAINT users_email_key UNIQUE (email)
);
ALTER TABLE public.users OWNER TO closureme_dbs_user;

-- ==========================================
-- FOREIGN KEYS
-- ==========================================
ALTER TABLE ONLY public.char_images
    ADD CONSTRAINT char_images_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.char_memory
    ADD CONSTRAINT char_memory_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.char_images(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.char_model
    ADD CONSTRAINT char_model_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.char_images(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.char_profile
    ADD CONSTRAINT char_profile_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.char_images(id) ON DELETE CASCADE;

ALTER TABLE ONLY public.char_voice
    ADD CONSTRAINT char_voice_image_id_fkey FOREIGN KEY (image_id) REFERENCES public.char_images(id) ON DELETE CASCADE;

-- ==========================================
-- TRIGGERS
-- ==========================================
CREATE TRIGGER trg_enforce_same_batch
BEFORE INSERT OR UPDATE ON public.char_images
FOR EACH ROW EXECUTE FUNCTION public.enforce_same_batch();

-- ==========================================
-- DEFAULT PRIVILEGES
-- ==========================================
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON SEQUENCES TO closureme_dbs_user;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TYPES TO closureme_dbs_user;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON FUNCTIONS TO closureme_dbs_user;
ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT SELECT,INSERT,REFERENCES,DELETE,TRIGGER,TRUNCATE,UPDATE ON TABLES TO closureme_dbs_user;

-- ==========================================
-- Done
-- ==========================================
